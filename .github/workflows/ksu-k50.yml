name: ksu-k50-frida Kernel Build

on:
  schedule:
      # 星期六中午12点跑一次
      - cron: '00 12 * * 6'
  #main分支代码变动后自动编译
  push:
    branches:
      - main

jobs:
 KernelSU:
    name: Build on ubuntu-latest 在ubuntu最新版上构建
    runs-on: ubuntu-latest

    steps:
      - name: Set swap to 10G 将swap设置为10G
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 10
    
      - name: Install dependencies 安装依赖关系
        run: |
          cd $GITHUB_WORKSPACE
          sudo apt update && sudo apt install repo -y
          sudo git config --global user.name "root"
          sudo git config --global user.email "localhost"
          sudo timedatectl set-timezone Asia/Shanghai

      - name: Clone source code 克隆源代码
        run: |
          #repo init --depth=1 -u https://android.googlesource.com/kernel/manifest -b common-android12-5.10-2022-01 --repo-rev=v2.16
          #sed -i 's/"android12-5.10-2022-01"/"deprecated\/android12-5.10-2022-01"/g' .repo/manifests/default.xml
          #repo sync
          ls -a
          rm -rf *
          git clone https://github.com/13231178/k50-5.10.66.git ./
          cd common
          remote_version=$(curl -L https://api.github.com/repos/tiann/KernelSU/releases/latest | jq -r .tag_name)
          curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -s $remote_version
          cd KernelSU
          echo "KSU_VERSION=$((remote_version))-$(($(git rev-list --count HEAD) + 10200))" >> $GITHUB_ENV

      - name: Build images 构建图像
        run: |
          sed -i 's/ -dirty//g' common/scripts/setlocalversion
          sed -i 's/check_defconfig//g' common/build.config.gki
          sed -i 's/EXTRAVERSION =/EXTRAVERSION = -GKI-XY/' common/Makefile
          sed -i 's/"$CONFIG_LOCALVERSION_AUTO" = "y"/"$CONFIG_LOCALVERSION_AUTO" = "n"/' common/scripts/setlocalversion
          sed -i 's/scm:++/scm:+/' common/scripts/setlocalversion
          LTO=thin BUILD_CONFIG=common/build.config.gki.aarch64 build/build.sh
          cd out/android12-5.10/dist
          export PATCH_LEVEL=2022-05
          export AVBTOOL=$GITHUB_WORKSPACE/build/build-tools/path/linux-x86/avbtool
          export GZIP=$GITHUB_WORKSPACE/prebuilts/build-tools/path/linux-x86/gzip
          export MKBOOTIMG=$GITHUB_WORKSPACE/tools/mkbootimg/mkbootimg.py
          export UNPACK_BOOTIMG=$GITHUB_WORKSPACE/tools/mkbootimg/unpack_bootimg.py
          curl -Lo gki-kernel.zip https://dl.google.com/android/gki/gki-certified-boot-android12-5.10-"${PATCH_LEVEL}"_r1.zip
          unzip gki-kernel.zip && rm gki-kernel.zip
          BOOT_IMG=$(find . -maxdepth 1 -name "boot*.img")
          $UNPACK_BOOTIMG --boot_img="$BOOT_IMG"
          rm "$BOOT_IMG"
          $GZIP -n -k -f -9 Image >Image.gz
          $MKBOOTIMG --header_version 4 --kernel Image.gz --output boot-gz.img --ramdisk out/ramdisk --os_version 12.0.0 --os_patch_level "${PATCH_LEVEL}"
          $AVBTOOL add_hash_footer --partition_name boot --partition_size $((64 * 1024 * 1024)) --image boot-gz.img --algorithm SHA256_RSA2048 --key $GITHUB_WORKSPACE/prebuilts/kernel-build-tools/linux-x86/share/avb/testkey_rsa2048.pem
          sudo tar -czvf boot-gz.tar.gz boot-gz.img
          
      - name: Upload build artifact 上传构建工件
        uses: actions/upload-artifact@v3
        with:
          name: 5.10.66-${{ env.KSU_VERSION }}
          path: out/android12-5.10/dist/boot-gz.tar.gz

      - name: Release 释放
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKENS }}
        with:
          tag_name: 5.10.66-${{ env.KSU_VERSION }}
          name: 5.10.66-${{ env.KSU_VERSION }}
          files: out/android12-5.10/dist/boot-gz.tar.gz

      #- name: Set environment variable 设置环境变量
      #  run: |
      #    echo "https://github.com/13231178/kernel-build-rubens-k50/releases/download/latest/boot-gz.tar.gz" >> url.txt
      #    echo "MESSAGE_FILE_PATH=$(cat url.txt)" >> $GITHUB_ENV

      #- name: Send message via Telegram
      #  uses: appleboy/telegram-action@master
      #  with:
      #    to: ${{ secrets.CHAT_ID }}
      #    token: ${{ secrets.TELEGRAM_TOKEN }}
      #    message: "构建任务已完成，当前构建版本为：${{ env.KSU_VERSION }}，请点击以下链接进行下载: ${{ env.MESSAGE_FILE_PATH }}"

